name: Docker Build / Publish

on:
  push:
    branches: [master]
    tags:
      - v*

jobs:

  build:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Check out the Code
        uses: actions/checkout@v2

      - 
        name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=d3vd/i-librarian
          DOCKER_PLATFORMS=linux/arm64,linux/amd64
          VERSION=edge

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi

          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
          fi

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS} --file ./Dockerfile .

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      -
        name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      -
        name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      -
        name: Docker Build and Publish
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

      -
        name: Inspect Image
        run: |
          docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}

